{"version":3,"sources":["table.js","propsTable.js","stateTable.js","submitForm.js","API.js","App.js","serviceWorker.js","index.js"],"names":["SimpleComponent","react_default","a","createElement","TableHeader","TableBody","Table","table_SimpleComponent","table_TableHeader","table_TableBody","Component","props","rows","bodyData","map","row","index","key","name","job","TableProps","tableData","this","appList","propsTable_TableHeader","propsTable_TableBody","onClick","removeInComponent","TableState","stateTable_TableHeader","stateTable_TableBody","removeCharacterFromApp","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","value","setState","defineProperty","submitForm","handleSubmit","state","initialState","_this$state","type","onChange","Api","dataList","_this2","fetch","then","result","json","entry","App","listState","removeCharacter","stateCharacters","filter","character","i","handleSubmitOnApp","concat","toConsumableArray","className","propsTable","table","stateTable","API","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.829d2ddf.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst SimpleComponent = () => {\r\n    return <h1>Example 2</h1>\r\n  }\r\n\r\nconst TableHeader = () =>{\r\n    return(\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody =()=>{\r\n    return(\r\n      <tbody>\r\n      <tr>\r\n        <td>2Charlie</td>\r\n        <td>2Janitor</td>\r\n      </tr>\r\n      <tr>\r\n        <td>2Mac</td>\r\n        <td>2Bouncer</td>\r\n      </tr>\r\n      <tr>\r\n        <td>2Dee</td>\r\n        <td>2Aspiring actress</td>\r\n      </tr>\r\n      <tr>\r\n        <td>2Dennis</td>\r\n        <td>2Bartender</td>\r\n      </tr>\r\n    </tbody>\r\n    )\r\n}\r\n\r\nclass Table extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n            <SimpleComponent></SimpleComponent>\r\n            <table>\r\n                <TableHeader />\r\n                <TableBody></TableBody>\r\n            </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react'\r\n\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = props => {\r\n    const rows = props.bodyData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n            </tr>\r\n        )\r\n    });\r\n    return <tbody>{rows}</tbody>\r\n}\r\n\r\nclass TableProps extends Component {\r\n    render() {\r\n        const tableData = this.props.appList\r\n\r\n        return (\r\n            <div>\r\n                <h1>Example 1</h1>\r\n                <table>\r\n\r\n                    <TableHeader />\r\n                    <TableBody bodyData={tableData} />\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableProps;","import React, { Component } from 'react'\r\n\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = props => {\r\n    const rows = props.bodyData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button onClick={() => props.removeInComponent(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    });\r\n    return <tbody>{rows}</tbody>\r\n}\r\n\r\nclass TableState extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Example 1</h1>\r\n                <table>\r\n                    <TableHeader />\r\n                    <TableBody bodyData={this.props.appList} removeInComponent={this.props.removeCharacterFromApp} />\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableState;","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.initialState = {\r\n            name: '',\r\n            job: '',\r\n        }\r\n        this.state = this.initialState\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    submitForm=()=>{\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    render() {\r\n        const { name, job } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <h1>Submit Form</h1>\r\n            <form>\r\n                <label>Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange} />\r\n                <label>Job</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"job\"\r\n                    value={job}\r\n                    onChange={this.handleChange} />\r\n                    <input type=\"button\" value = \"Submit\" onClick={this.submitForm}/>\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Form","import React, { Component } from 'react';\r\n\r\nclass Api extends Component{\r\n    state = {\r\n        dataList: [],\r\n    }\r\n\r\n    componentDidMount(){\r\n        const url='https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*'\r\n\r\n        fetch(url)\r\n        .then(result => result.json())\r\n        .then(result =>{\r\n            this.setState({\r\n                dataList:result,\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const data = this.state.dataList\r\n\r\n        const result = data.map((entry, index) =>{\r\n            return <li key={index}>{entry}</li>\r\n        })\r\n        return <ul>{result}</ul>\r\n    }\r\n\r\n}\r\n\r\nexport default Api","import React, { Component } from 'react';\nimport './App.css';\nimport Table from './table';\nimport TableProps from './propsTable';\nimport TableState from './stateTable'\nimport Form from './submitForm'\nimport Api from './API'\n\nclass App extends Component {\n\n\n  state = {\n    listState: [\n      // {\n      //   name: '3Charlie',\n      //   job: '3Janitor',\n      // },\n      // {\n      //   name: '3Mac',\n      //   job: '3Bouncer',\n      // },\n      // {\n      //   name: '3Dee',\n      //   job: '3Aspring actress',\n      // },\n      // {\n      //   name: '3Dennis',\n      //   job: '3Bartender',\n      // },\n    ],\n  };\n\n  \n\nremoveCharacter = index =>{\n  const stateCharacters = this.state.listState\n  this.setState({ \n    listState : stateCharacters.filter((character, i)=>{\n      return i !== index\n    }),\n  })\n}\n\nhandleSubmitOnApp = character =>{\n  this.setState({\n    listState : [...this.state.listState, character]\n  })\n}\n  render() {\n    const stateCharacters  = this.state.listState\n    const appListData = [\n      {\n        name: 'Charlie',\n        job: 'Janitor',\n      },\n      {\n        name: 'Mac',\n        job: 'Bouncer',\n      },\n      {\n        name: 'Dee',\n        job: 'Aspring actress',\n      },\n      {\n        name: 'Dennis',\n        job: 'Bartender',\n      }\n    ]\n    return (\n      <div className=\"container\">\n        <TableProps appList={appListData} />\n        <br />\n        <br />\n        \n        <Table />\n        <br />\n        <br />\n\n        <TableState appList={stateCharacters} removeCharacterFromApp = {this.removeCharacter}/>\n        <br />\n        <br />\n\n        <Form handleSubmit = {this.handleSubmitOnApp}/>\n        <br />\n        <br />\n         \n        <Api />\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}